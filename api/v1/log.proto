syntax = "proto3";

package log.v1;

option go_package = "github.com/DpodDani/api/log_v1";

message Record {
    bytes value = 1;
    uint64 offset = 2;
    uint64 term = 3;
    uint32 type = 4;
}

service Log {
    rpc Produce(ProduceRequest) returns (ProduceResponse) {}
    rpc Consume(ConsumeRequest) returns (ConsumeResponse) {}
    // server-side streaming where client sends request to server
    // and gets back stream of data
    rpc ConsumeStream(ConsumeRequest) returns (stream ConsumeResponse) {}
    // bidirectional streaming where client and server send sequence of messages
    rpc ProduceStream(stream ProduceRequest) returns (stream ProduceResponse) {}
    // get cluster's servers
    rpc GetServers(GetServersRequest) returns (GetServersResponse) {}
}

message ProduceRequest {
    Record record = 1;
}

message ProduceResponse {
    uint64 offset = 1;
}

message ConsumeRequest {
    uint64 offset = 1;
}

message ConsumeResponse {
    Record record = 2;
}

message GetServersRequest {}

message GetServersResponse {
    repeated Server servers = 1;
}

// this information should tell picker what server to send the produce calls
// to and what servers to send consume calls to
message Server {
    string id = 1;
    string rpc_addr = 2; // server addresses that client should connect to
    bool is_leader = 3;
}